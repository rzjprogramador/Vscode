// Place your key bindings in this file to override the defaultsauto[]
// tester

[
  {
    "key": "f5",
    "command": "code-runner.run"
  },
  {
    "key": "f1 \\",
    "command": "editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+\\",
    "command": "editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "f1 d",
    "command": "editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+f5",
    "command": "workbench.action.terminal.focusAtIndex5"
  },
  {
    "key": "f1 ;",
    "command": "workbench.action.terminal.kill"
  },
  {
    "key": "f1 ,",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "f1 .",
    "command": "editor.action.selectHighlights",
    "when": "editorFocus"
  },
  {
    "key": "f1 t",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+shift+[BracketLeft]",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeGroup",
    "when": "activeEditorGroupEmpty && multipleEditorGroups"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.terminal.killEditor",
    "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated && resourceScheme == 'vscode-terminal' || terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
  },
  {
    "key": "f1 q",
    "command": "workbench.action.closeEditorsInGroup"
  },
  {
    "key": "f1 w",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+k w",
    "command": "-workbench.action.closeEditorsInGroup"
  },
  {
    "key": "ctrl+t",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "ctrl+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "f1 e",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "f1 v",
    "command": "workbench.action.splitEditor"
  },
  {
    "key": "ctrl+\\",
    "command": "-workbench.action.splitEditor"
  },
  {
    "key": "f1 f",
    "command": "actions.find",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "ctrl+shift+alt+n",
    "command": "workbench.action.newWindow"
  },
  {
    "key": "ctrl+shift+n",
    "command": "-workbench.action.newWindow"
  },
  {
    "key": "ctrl+shift+l",
    "command": "-editor.action.selectHighlights",
    "when": "editorFocus"
  },
  {
    "key": "shift+home shift+home",
    "command": "interactive.scrollToTop",
    "when": "resourceScheme == 'vscode-interactive'"
  },
  {
    "key": "ctrl+home",
    "command": "-interactive.scrollToTop",
    "when": "resourceScheme == 'vscode-interactive'"
  },
  {
    "key": "shift+home shift+home",
    "command": "cursorTop",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+home",
    "command": "-cursorTop",
    "when": "textInputFocus"
  },
  {
    "key": "shift+home shift+home",
    "command": "notebook.focusTop",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "ctrl+home",
    "command": "-notebook.focusTop",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "shift+home shift+home",
    "command": "cursorTopSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+home",
    "command": "-cursorTopSelect",
    "when": "textInputFocus"
  },
  {
    "key": "shift+f1",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "f1",
    "command": "-workbench.action.showCommands"
  },
  {
    "key": "f1 down",
    "command": "editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+alt+down",
    "command": "-editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "f1 up",
    "command": "editor.action.copyLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+alt+up",
    "command": "-editor.action.copyLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+a",
    "command": "-editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  }
]
